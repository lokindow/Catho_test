import { QueryList, ElementRef, AfterViewInit, AfterContentInit, AfterContentChecked } from '@angular/core';
import { AMBPaginationPanelItemComponent } from './pagination-panel-item/amb.component.pagination-panel-item';
import { AMBComponent } from '../../core/amb.component';
export declare class AMBPaginationPanelComponent extends AMBComponent implements AfterContentChecked, AfterContentInit, AfterViewInit {
    protected elementRef: ElementRef;
    /** Propriedade do componente de itens filhos */
    panelItems: QueryList<AMBPaginationPanelItemComponent>;
    /** Propriedade do componente de execucao de funcao no inicio de slide */
    onSlideStart: Function | null;
    /** Propriedade do componente de execucao de funcao ao termino de slide */
    onSlideEnd: Function | null;
    /** Propriedade do componente de tempo de intervalo entre slides */
    interval: number | null;
    /** Propriedade do componente para permitir retornar ao inicio ou nao */
    wrap: boolean | false;
    /** Propriedade do componente para desabilitar */
    disabled: boolean | false;
    /** Propriedade do componente para desabilitar os botões */
    disabledButtons: boolean | false;
    /** Indica se o componente terá animação automática. */
    animation: boolean;
    /** Contador do slide atual */
    count: number;
    /** Largura do content */
    private contentWidth;
    /** Altura da lista de itens */
    private listHeight;
    /** Número de itens */
    private itemSize;
    /** Temporizador timeout */
    private timer;
    /** Flag para garanttia na chama externa */
    private executionFlag;
    constructor(elementRef: ElementRef);
    /**
       * Método chamado após cada verificação do conteúdo de uma diretiva.
       *
       * @see {@link https://angular.io/api/core/AfterContentChecked}
       */
    ngAfterContentChecked(): void;
    /**
     *   Método chamado após o content de um componente foi inicializado.
     */
    ngAfterContentInit(): void;
    /**
     *   Método chamado após a view de um componente foi inicializado.
     */
    ngAfterViewInit(): void;
    /**
     *   Método chamado para regular os tamnanhos dos containers de apresentacao
     */
    private resize();
    /**
      *   Método chamado após o botão da esquerda ser clicado
      */
    prevPanel(slide: number): void;
    /**
      *   Método chamado após o botão da direita ser clicado.
      */
    nextPanel(intervalStatus?: boolean, slide?: number): void;
    /**
    *   Método para executar o intervalo de tempo para acionar os proximos slides
    */
    private executeInterval(intervalStatus);
    /**
    *   Método para encaminha o componente até o slide desejado.
    */
    goToSlide(slide: number): void;
}
