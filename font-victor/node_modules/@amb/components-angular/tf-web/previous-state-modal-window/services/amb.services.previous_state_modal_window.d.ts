import { Injector } from "@angular/core";
import { AMBPreviousStateModalWindowComponent } from "../amb.component.previous_state_modal_window";
import { PreviousStateModalWindowOptions } from "../interfaces/amb.previous_state_modal_window-options";
/**
 * @license
 * Copyright Bradesco S/A. All Rights Reserved.
 */
/**
 * @Serviço @name PreviousStateModalWindowService
 * Serviço para o Tela Modal Estado Anterior.
 *
 * @description
 * O serviço PreviousStateModalWindowService é responsável por criar a Tela Modal Estado Anterior
 *
 */
export declare class PreviousStateModalWindowService {
    private injector;
    /**
     * Atributo responsável por armazenar as opcoes do tela modal estado anterior
     */
    private options;
    /**
     * Lista com as telas modais
     */
    private listModalWindows;
    /**
     * Construtor padrão
     * @param injector - responsável por criar o tela modal estado anterior
     */
    constructor(injector: Injector);
    /**
     * Verificar se deve criar ou recuperar o componente tela modal estado anterior
     * @param options Configurações do componente tela modal estado anterior
     */
    createPreviousStateModalWindow(options: PreviousStateModalWindowOptions): void;
    /**
     * Acionar o 'display: block' no componente para que ele possa aparecer na tela
     */
    private show();
    /**
     * Retornar a instancia do tela modal estado anterior referente ao componente que criou.
     *
     * @param ownerComponent Id do componente que criou a tela modal estado anterior.
     */
    getModalWindowInstance(ownerComponent: string): AMBPreviousStateModalWindowComponent;
    /**
     * Verificar se o componente já existe para o ID passado.
     *
     * @param ownerComponent Id do componente que criou a tela modal estado anterior.
     */
    hasPreviousStateModalWindow(ownerComponent: string): boolean;
    /**
     * Método responsável por criar o componente tela modal estado anterior
     */
    private build();
    /**
     * Método responsável por preencher as propriedades do componente, de acordo com as informações passadas pelo usuário
     */
    private fillProperties(componente);
}
