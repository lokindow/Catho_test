/**
 * @license
 * Copyright Bradesco S/A. All Rights Reserved.
 */
import { ElementRef, QueryList, Injector, ApplicationRef } from '@angular/core';
import { AMBComponent } from '../../core/amb.component';
import { AMBMenuBarItemComponent } from './menu-bar-item/amb.component.menu-bar-item';
/**
 * Definição do componente AMBMenuBar.
 *
 * @selector amb-menu-bar
 * @templateUrl amb.component.menu-bar.html
 * @styleUrls amb.component.menu-bar.scss
 *
 * @see {@link https://angular.io/api/core/Component}
 */
export declare class AMBMenuBarComponent extends AMBComponent {
    protected elementRef: ElementRef;
    private injector;
    private appRef;
    menuBarItems: QueryList<AMBMenuBarItemComponent>;
    private vCollapsed;
    private hCollapsed;
    /** Função callback a ser chamada quando o componente for contraido horizontalmente. */
    onClickHorizontal: Function;
    /** Função callback a ser chamada quando o componente for contraido verticalmente. */
    onClickVertical: Function;
    /** Define a label que será monstrada no título do menu bar. */
    labelTitle: string;
    /**
     * @constructor
     * Construtor padrão.
     *
     * @param elementRef Elemento DOM representando o componente.
     */
    constructor(elementRef: ElementRef, injector: Injector, appRef: ApplicationRef);
    /**
     * Esconde o componente verticalmente
     */
    private verticalSlide();
    /**
     * Esconde o componente horizontalmente
     */
    private horizontalSlide();
    /**
     *  Adicona um item no menu
     *  @param properties propriedades a serem adicionadas no menu item e action item
     */
    addMenuItem: Function;
    /**
     *  Adiciona um action item dentro do item do menu
     *  @param properties propriedades a serem adicionadas no action item
     */
    private addActionItem;
    /**
     * Verfiica se ultrapassou o tamanho da div para habilitar os botões de navegação
     */
    private verifyOverFlow;
    /**
     * Move div que possui os itens do menu para esquerda
     */
    private moveToLeft();
    /**
     * Move a div que possui os itens do menu para direita
     */
    private moveToRight();
    /**
     * Esconde o componente
     */
    hide(): void;
    /**
     * Mostra o componente
     */
    show(): void;
    /**
     * Esconde o componente horizontalmente com animação
     */
    toggleHorizontal(): void;
    /**
     * Esconde o componente verticalmente com animação
     */
    toggleVertical(): void;
    /**
     * Seta um título ao componente
     * @param text Tíulo a ser definido no componente
     */
    setTitle(text: string): void;
    /**
     * Retorna o estado do compoente, se está fechado ou aberto
     */
    state(): string;
    /**
     * Desabilita um item do menu
     * @param id Id do item a ser desabilitado
     */
    disableMenuItem(id: string): void;
    /**
     * Habilita um item do menu
     * @param id Id do item a ser habilitado
     */
    enableMenuItem(id: string): void;
    /**
     * Remove um item do menu
     * @param id Id do item a ser removido
     */
    removeMenuItem(id: string): void;
}
