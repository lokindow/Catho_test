/**
 * @license
 * Copyright Bradesco S/A. All Rights Reserved.
 */
import { Injector, ComponentFactoryResolver, ComponentRef, Type } from '@angular/core';
/**
 * Classe responsável pela fábrica dos componentes AMB.
 *
 * @description
 * Fornece métodos para criação de componentes de forma dinâmica. Os componentes são criados
 * para os casos em que o componente não é definido no template da aplicação. Por exemplo é o caso
 * dos diálogos, onde não há necessidade de declará-los no template, e sim somente criar o componente
 * se for necessário.
 *
 * Módulo: entryComponents
 * De acordo com a definição NgModule, entryComponents: Especifica uma lista de componentes que devem
 * ser compilados quando este módulo é definido. Para cada componente listado no módulo entryComponents,
 * o Angular irá criar um ComponentFactory e armazená-lo no ComponentFactoryResolver.
 * ### Para carregar um componente dinamicamente, é necessário declará-lo no módulo entryComponents ###
 *
 * @example
 * ...
 * entryComponents: [
 *   AMBErrorDialog
 * ]
 * ...
 * let ambComponentFactory = this.injector.get<AMBComponentFactory<AMBErrorDialog>>(AMBComponentFactory);
 * let componentRef: ComponentRef<AMBErrorDialog> = ambComponentFactory.createComponent(AMBErrorDialog);
 * let ambErrorDialogComponent: AMBErrorDialog = componentRef.instance;
 * ambErrorDialogComponent.setError(error);
 *
 * @see {@link https://angular.io/api/core/ComponentFactoryResolver}
 */
export declare class AMBComponentFactory<C> {
    private componentFactoryResolver;
    private injector;
    /**
     * @constructor
     * Construtor padrão.
     *
     * @param ComponentFactoryResolver Fábrica de componentes do Angular.
     * @param Injector Injetor de dependências do Angular.
     */
    constructor(componentFactoryResolver: ComponentFactoryResolver, injector: Injector);
    /**
     * Método para criação de componentes AMB de forma dinâmica. Para a criação dos componentes
     *
     *
     * @param Type<C> Tipo do componente a ser criado. O componente deve estar declarado
     * no módulo entryComponents.
     *
     * @return ComponentRef<C> O ComponentRef fornece acesso à Instância do Componente,
     * bem como outros objetos relacionados a esta instância do componente e permite que você
     * destrua a Instância do Componente através do método de destruição.
     *
     * @see {@link https://angular.io/api/core/ComponentFactoryResolver}
     * @see {@link https://angular.io/api/core/ComponentRef}
     */
    createComponent(component: Type<C>): ComponentRef<C>;
}
