/**
 * @license
 * Copyright Bradesco S/A. All Rights Reserved.
 */
import { Injector, ComponentFactoryResolver, ApplicationRef, ComponentRef } from '@angular/core';
/**
 * Serviço para manipular o DOM das aplicações AMB.
 *
 * @description
 * Fornece métodos para auxiliar na manipulação do DOM das páginas da aplicação. Fornece métodos
 * para facilmente adicionar, alterar ou remover componentes do DOM da aplicação. Este serviço utiliza
 * componentes Angular para suas funcionalidades. O Angular fornece diversos componentes para facilitar a
 * manutenção do DOM da aplicação.
 *
 * Quando inicializar um novo componente raiz em um aplicativo, o Angular monta o componente do
 * aplicativo especificado em elementos DOM identificados pelo seletor [componentType] e inicia a
 * detecção de alteração automática para finalizar a inicialização do componente. Opcionalmente, um
 * componente pode ser montado em um elemento DOM que não coincide com o seletor [componentType].
 *
 * @example
 * this.injector.get(AMBDomService).appendComponentToBody(componentRef);
 *
 */
export declare class AMBDomService<C> {
    private componentFactoryResolver;
    private injector;
    private appRef;
    /**
     * @constructor
     * Construtor padrão.
     *
     * @param ComponentFactoryResolver Fábrica de componentes do Angular.
     * @param Injector Injetor de dependências do Angular.
     * @param ApplicationRef Uma referência a um aplicativo Angular executado em uma página.
     */
    constructor(componentFactoryResolver: ComponentFactoryResolver, injector: Injector, appRef: ApplicationRef);
    /**
     * Anexa um componente no body da página. A view será automaticamente desmontada quando for destruída.
     * Será lançada uma exceção se a exibição já estiver anexada a um ViewContainer.
     *
     * @param component Componente a ser adicionado no body.
     *
     * @see {@link https://angular.io/api/core/ApplicationRef}
     * @see {@link https://angular.io/api/core/ComponentRef}
     */
    appendComponentToBody(component: ComponentRef<C>): void;
}
