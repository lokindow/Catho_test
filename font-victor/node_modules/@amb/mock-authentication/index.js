import{Injectable,NgModule}from"@angular/core";import{AMBAuthentication,AMBAuthorization,AMBException,AMBRolesMapping,AMBServiceContainer,AMBServiceType,AMBStorageObject,AMBUser,Observable}from"@amb/core";var AMBMockFile=function(){function e(){this._usersMock=[]}return Object.defineProperty(e.prototype,"usersMock",{get:function(){return this._usersMock},enumerable:!0,configurable:!0}),e.decorators=[{type:Injectable}],e.ctorParameters=function(){return[]},e}(),__extends=function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function o(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),AMBAuthenticationException=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t}(AMBException),AMBMockedAuthentication=function(){function e(e,t,r){this._authenticated=!1,this._delayDuration=3e3,this._authorization=e,this._mockFile=t,this._mapping=r,this._storage=AMBServiceContainer.get(AMBServiceType.AMBStorage),this._logger=AMBServiceContainer.get(AMBServiceType.Logger.ConsoleLogger);try{var o=atob(this._storage.getItem(AMBUser._userKey)),i=JSON.parse(o);this._user=new AMBUser(i._name,i._username,i._roles)}catch(e){this._logger.log("Não foi possível recuperar o usuário da sessão",4),this._user=void 0}void 0!==this._user?(this._authorization.ambUser=this._user,this._authorization.emitChanges(this._user,"restore"),this._authenticated=!0):(this._user=new AMBUser,this._authorization.emitChanges(this._user,null),this._storage.removeItem(AMBUser._userKey),this._authenticated=!1)}return e.prototype.isAuthenticated=function(){return this._authenticated},e.prototype.login=function(e,t){var r=this;return this._user=void 0,this._authenticated=!1,this._storage.removeItem(AMBUser._userKey),this._storage.removeItem(AMBUser._authKey),this._authorization.emitChanges(this._user,"loginInit"),Observable.create(function(o){for(var i=0,n=r._mockFile.usersMock;i<n.length;i++){var s=n[i];if(s.username.toLowerCase()===e.toLowerCase()&&s.password===t){r._user=new AMBUser;for(var a=0,u=s.groups;a<u.length;a++)for(var c=u[a],h=0,_=r._mapping.mapping;h<_.length;h++){var M=_[h];M.groups.indexOf(c)>-1&&r._user.add(M.role)}r._user.username=s.name,r._user.name=s.username,r._authenticated=!0,r._authorization.emitChanges(r._user,"login");var g=new AMBStorageObject;g.key=AMBUser._userKey,g.value=btoa(JSON.stringify(r._user)),r._storage.setItem(g,!0);var p=new AMBStorageObject;p.key=AMBUser._authKey,p.value=btoa(e+":"+t),r._storage.setItem(p,!0),r._logger.log("Usuário: "+e+" autenticado com sucesso",2);break}}if(!r._authenticated){var l=new AMBAuthenticationException("Usuário e/ou senha inválido(s)");throw r._logger.log("Problema autenticando o usuário: "+e,4),l}o.next(r._user)})},e.prototype.logoff=function(){var e=this;return Observable.create(function(t){setTimeout(function(){e._user=void 0,e._authenticated=!1,e._storage.removeItem(AMBUser._userKey),e._storage.removeItem(AMBUser._authKey),t.next(!0),e._authorization.emitChanges(e._user,"logoff")},e._delayDuration)})},Object.defineProperty(e.prototype,"user",{get:function(){return void 0===this._user&&(this._user=new AMBUser),this._user},enumerable:!0,configurable:!0}),e.decorators=[{type:Injectable}],e.ctorParameters=function(){return[{type:AMBAuthorization},{type:AMBMockFile},{type:AMBRolesMapping}]},e}(),AMBMockeAuthenticationModule=function(){function e(e){}return e.forRoot=function(){return{ngModule:e}},e.decorators=[{type:NgModule,args:[{declarations:[],imports:[],exports:[],providers:[AMBMockFile,{provide:AMBAuthentication,useClass:AMBMockedAuthentication}]}]}],e.ctorParameters=function(){return[{type:AMBAuthentication}]},e}();export{AMBMockeAuthenticationModule,AMBMockedAuthentication,AMBMockFile};