import { AMBAuthorization, AMBUser } from '@amb/core';
import { Observable } from 'rxjs/rx';
/**
 * @Serviço @name AMBAuthorizationService
 * Serviço de controle de permissões da AMB.
 *
 * @description
 * O serviço faz parte do módulo @amb/authorization, este deve ser implementado para a
 * utilização do serviço. Para utilizar o serviço ver a documentação referente ao @injectable
 * do InversifyJS.
 *
 *
 *
 * @implements IAMBAuthorization @see {@link AMBAuthorization}
 *
 * @see {@link http://inversify.io/}
 */
export declare class AMBAuthorizationService implements AMBAuthorization {
    /** Subject para emitir alterações às diretivas */
    private _subject;
    /** Observable para emitir alterações às diretivas */
    private _observable;
    /** Usuário para autorização */
    private _ambUser;
    /**Controlador da sessão */
    private _storage;
    private _logger;
    /**
     * Cosntrutor do serviço
     */
    constructor();
    /**
     * @override
     * Verifica se o usuário possui determinada permissão
     *
     * @param role permissão
     */
    hasDefined(role: string): boolean;
    /**
     * @override
     * Verifica se o usuário possui uma das permissões enviadas em uma lista
     *
     * @param roles array de permissões
     */
    hasOneDefined(roles: Array<string>): boolean;
    /**
     * @override
     * Emite alterações para informar o angular.
     *
     * @param value
     */
    emitChanges(ambUser: AMBUser, value: string): void;
    /** Retorna a observable da classe */
    readonly observable: Observable<string>;
    /** Seta o usuário utilizado para o serviço de autorização */
    ambUser: AMBUser;
}
