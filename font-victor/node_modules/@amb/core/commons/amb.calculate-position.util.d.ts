/**
 * @license
 * Copyright Bradesco S/A. All Rights Reserved.
 */
/**
 * @Utilitário @name AMBCalculatePositionUtil
 *
 * Calculador de posição.
 *
 * @description
 * Classe reponsável calcular e reposicionar elementos na view.
 *
 */
export declare class AMBCalculatePositionUtil {
    /**
     * Posições possíveis para o posicionamentos;
     */
    private positions;
    /**
     * marcador da posição.
     */
    private position;
    /**
     * Posição inicial
     */
    private initialPosition;
    /**
     *
     * @param hostEl parent element que engloba o componente
     * @param element componente
     * @param initialPosition - posição inicial
     */
    reposition(hostEl: HTMLElement, element: HTMLElement, initialPosition: string): {
        top: number;
        left: number;
        position: string;
    };
    /**
     * Método responsável por calcular a posição onde será colocado o Alert Popup
     *
     * @param hostEl - referência do Alert Popup
     * @param targetEl - Referência do componente onde será colocado o Alert Popup
     * @param positionStr - Posição do componente que usará o Alert Popup
     * @param appendToBody  - define se o componente deve ser inserido no corpo da tela.
     */
    private positionElements(hostEl, targetEl, positionStr, appendToBody?);
    /**
     * Método responsável por auxiliar no calcula da posição do componente Alert Popup
     * @param nativeEl - Alert Popup
     */
    private calculatePosition(nativeEl);
    /**
     * Método responsável por obter e calcular a largura do Alert Popup
     * @param nativeEl - Alert Popup
     */
    private offset(nativeEl);
    /**
     * Método responsável por verificar se o componente alvo é relativo ou absoluto;
     * @param nativeEl - componente alvo
     * @param cssProp - propriedade css
     */
    private getStyle(nativeEl, cssProp);
    /**
     * Método responsável por verificar se a posição é estatica;
     * @param nativeEl - componente
     */
    private isStaticPositioned(nativeEl);
    /**
     * Método responsável por objeter o elemento pai do componente.
     * @param nativeEl - componente
     */
    private parentOffsetEl(nativeEl);
}
