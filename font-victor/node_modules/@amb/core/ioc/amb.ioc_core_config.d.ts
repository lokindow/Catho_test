/**
 * @license
 * Copyright Bradesco S/A. All Rights Reserved.
 */
import { Container, interfaces } from "inversify";
/**
 * Bind dos serviços disponibilizados pelo módulo @amb/core.
 * @module @amb/core
 *
 * @description
 * Para a disponibilização dos serviços AMB é utilizado o framework de mercado InversifyJS.
 * @see {@link http://inversify.io/}
 *
 * InversifyJS é um recipiente de inversão de controle (IoC) para aplicativos
 * TypeScript e JavaScript. Um contêiner IoC usa um construtor de classe para identificar
 * e injetar suas dependências. O InversifyJS possui uma API amigável e incentiva o uso das
 * melhores práticas de OOP e IoC.
 *
 * @example
 * container.bind<Warrior>(SERVICE_IDENTIFIER.WARRIOR).to(Ninja).whenTargetNamed(TAG.CHINESE);
 * ...
 * container.bind<Weapon>(SERVICE_IDENTIFIER.WEAPON).to(Shuriken).whenParentNamed(TAG.CHINESE);
 * ...
 * container.bind<Battle>(SERVICE_IDENTIFIER.BATTLE).to(EpicBattle);
 */
/**
 *  Containar InversifyJS
 *  ### TODOS OS SERVIÇOS AMB DEVEM SER REGISTRADOS NESTE MESMO CONTAINER. ###
 *
 *  @example
 *  import 'AMBServiceContainer' from '@amb/core';
 *  AMBServiceContainer.bind...
 */
export declare const AMBServiceContainer: Container;
export declare const provide: (serviceIdentifier: string | symbol | interfaces.Newable<any> | interfaces.Abstract<any>, force?: boolean) => (target: any) => any;
