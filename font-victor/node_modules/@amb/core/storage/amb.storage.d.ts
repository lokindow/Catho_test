import { AMBStorageObject } from './amb.storage-object';
/**
 * @Serviço @name AMBStorage
 * Gestor da sessão do AMB 2.0.
 *
 * @description
 * Esta classe é responsável por armazenar e devolver objetos da sessão da aplicação. Esta sessão é somente no lado do client,
 * não há persistência dos dados no server.
 *
 * Com o armazenamento na Web, os aplicativos da Web podem armazenar dados localmente no navegador do usuário. Antes do
 * HTML5, os dados do aplicativo deveriam ser armazenados em cookies, incluídos em todas as solicitações do servidor.
 * O armazenamento na Web é mais seguro e grandes quantidades de dados podem ser armazenadas localmente, sem afetar o
 * desempenho do site.
 * Ao contrário dos cookies, o limite de armazenamento é muito maior (pelo menos 5MB) e as informações nunca são
 * transferidas para o servidor. O armazenamento na Web é por origem (por domínio e protocolo). Todas as páginas, de
 * uma origem, podem armazenar e acessar os mesmos dados.
 *
 */
export declare class AMBStorage {
    /**
     * Adiciona um objeto na sessão. Este objeto é do tipo {@link AMBStorageObject} e deve ser preenchido corretamente,
     * contendo obrigatoriamente uma chave para identifica-lo. Caso a chave não seja informada, será lançada uma exceção.
     * Também será necessário informar se o objeto a ser persistido será expirado ou não, caso o objeto deva ser expirado
     * ao fechar a página o objeto será removido da sessão.
     *
     * Esta sessão persiste objetos somente no lado client, não havendo nenhuma persistência dos dados no server.
     *
     * @param storageObject Objeto a ser armazenado em sessão.
     * @param expires Flag que indica se o objeto expira ou não.
     *
     * @throws {@link AMBObjectDoesNotHaveAKeyException}
     */
    setItem(storageObject: AMBStorageObject, expires: boolean): void;
    /**
     * Obtem um valor armazenado em sessão correspondente a chave informada como parâmetro.
     *
     * @param key Chave para identificação do valor em sessão.
     * @return Valor armazenado em sessão.
     *
     */
    getItem(key: string): string;
    /**
     * Remove um valor armazenado em sessão correspondente a chave informada como parâmetro.
     *
     * @param key Chave para identificação do valor em sessão.
     * @return Valor armazenado em sessão.
     *
     */
    removeItem(key: string): void;
    /**
     * Armazena os dados em sessão sem data de validade.
     *
     * @param sessionObject Objeto a ser persistido em sessão.
     */
    private addLocalStorageItem(storageObject);
    /**
     * Armazena dados para uma sessão (os dados são perdidos quando a aba do navegador está fechada)
     *
     * @param sessionObject Objeto a ser persistido em sessão do navegador.
     */
    private addSessionStorageItem(storageObject);
}
