{"version":3,"file":"ngx-highlightjs.umd.js","sources":["~/ngx-highlightjs/src/highlight.module.ts","~/ngx-highlightjs/src/highlight.directive.ts","~/ngx-highlightjs/src/highlight.service.ts","~/ngx-highlightjs/src/highlight.token.ts"],"sourcesContent":["import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { HighlightDirective } from './highlight.directive';\nimport { HighlightService } from './highlight.service';\nimport { HighlightOptions } from './highlight.model';\nimport { OPTIONS } from './highlight.token';\n\nexport function HighlightFactory(options: HighlightOptions) {\n  return new HighlightService(options);\n}\n\n@NgModule({\n  declarations: [HighlightDirective],\n  exports: [HighlightDirective]\n})\nexport class HighlightModule {\n  static forRoot(options?: HighlightOptions): ModuleWithProviders {\n    return {\n      ngModule: HighlightModule,\n      providers: [\n        {provide: OPTIONS, useValue: options},\n        {\n          provide: HighlightService,\n          useFactory: HighlightFactory,\n          deps: [OPTIONS]\n        }\n      ]\n    };\n  }\n}\n","import { Directive, ElementRef, Renderer2, OnDestroy, Input, OnInit, HostBinding } from '@angular/core';\nimport { HighlightService } from './highlight.service';\nimport { from } from 'rxjs/observable/from';\nimport { map, take, filter, tap } from 'rxjs/operators';\n\n/** Highlight.js library */\ndeclare const hljs: any;\n\n/** There are 2 ways to set the code\n *  1 - using the [code] input (default) <code highlight [code]=\"yourCode\"></code>\n *  2 - using element text content <code> {{yourCode}} </code>\n */\n\n@Directive({\n  selector: '[highlight]'\n})\nexport class HighlightDirective implements OnInit, OnDestroy {\n\n  /** Element ref */\n  el: HTMLElement;\n\n  /** Highlight code from text content on changes */\n  domObs: MutationObserver;\n\n  /** Code text */\n  code: string;\n\n  /** Highlight, can be use to select highlight mode */\n  @Input() highlight: string;\n\n  /** Highlight code directly */\n  @Input('code')\n  set setCode(code: string) {\n    this.code = code;\n    this.hl.ready$.pipe(\n      filter(ready => ready),\n      take(1),\n      tap(() => this.highlightElement(this.el, code))\n    ).subscribe();\n  }\n\n  @HostBinding('class.hljs') hljsClass = true;\n\n  constructor(el: ElementRef, private renderer: Renderer2, private hl: HighlightService) {\n    this.el = el.nativeElement;\n  }\n\n  ngOnInit() {\n\n    /** If code is undefined, highlight using element text content */\n    if (!this.code && this.hl.options.auto) {\n\n      this.hl.ready$.pipe(\n        filter(ready => ready),\n        take(1),\n        tap(() => {\n          this.highlightTextContent();\n\n          /** Highlight when text content changes */\n          this.domObs = new MutationObserver(() => this.highlightTextContent());\n          this.domObs.observe(this.el, { childList: true, subtree: true });\n        })\n      ).subscribe();\n    }\n  }\n\n  /** Highlight using element text content */\n  highlightTextContent() {\n    if (!this.highlight) {\n      /** <code highlight [textContent]=\"code\"></code> */\n      if (this.el.tagName.toLowerCase() === 'code') {\n        this.highlightElement(this.el, this.el.innerText.trim());\n      } else {\n        console.warn(`[HighlightDirective]: Use 'highlight' on <code> elements only`);\n      }\n    } else if (this.highlight === 'all') {\n      /** <div highlight=\"all\">\n       *    <pre><code [textContent]=\"code\"></code></pre>\n       *    <pre><code [textContent]=\"code\"></code></pre>\n       *  </div>\n       */\n      this.highlightChildren(this.el, 'pre code');\n    } else {\n      /** <div highlight=\"section code\">\n       *    <section><code [textContent]=\"code\"></code></section>\n       *    <section><code [textContent]=\"code\"></code></section>\n       *  </div>\n       */\n      this.highlightChildren(this.el, this.highlight);\n    }\n  }\n\n  /** Highlight single element */\n  highlightElement(el: HTMLElement, code: string) {\n\n    const highlightedCode = hljs.highlightAuto(code).value;\n\n    if (highlightedCode !== el.innerHTML) {\n      this.renderer.setProperty(el, 'innerHTML', highlightedCode);\n    }\n  }\n\n  /** Highlight children */\n  highlightChildren(el: HTMLElement, selector: string) {\n\n    const codeElements = el.querySelectorAll(selector);\n\n    /** highlight all children with the same selector */\n    from(codeElements).pipe(\n      filter((code: HTMLElement) => code.childNodes.length === 1 && code.childNodes[0].nodeName === '#text'),\n      map((codeElement: HTMLElement) => this.highlightElement(codeElement, codeElement.innerText.trim())),\n      take(1)\n    ).subscribe();\n  }\n\n  ngOnDestroy() {\n    /** Disconnect MutationObserver */\n    if (!this.code && this.hl.options.auto) {\n      this.domObs.disconnect();\n    }\n  }\n}\n","import { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { HighlightOptions } from './highlight.model';\nimport { OPTIONS } from './highlight.token';\n\ndeclare const hljs: any;\n\n@Injectable()\nexport class HighlightService {\n\n  options: HighlightOptions = {\n    theme: 'github',\n    path: 'assets/lib/hljs',\n    auto: true\n  };\n\n  /** hljs script on load event */\n  ready$ = new BehaviorSubject(false);\n\n  constructor(@Optional() @Inject(OPTIONS) options: HighlightOptions) {\n\n    this.options = {...this.options, ...options};\n\n    /** Load hljs script and style only once */\n    this.loadScript();\n    this.loadTheme();\n  }\n\n  loadScript() {\n    const script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.onload = () => {\n      this.ready$.next(true);\n    };\n    script.src = `${this.options.path}/highlight.pack.js`;\n    document.head.appendChild(script);\n  }\n\n  loadTheme() {\n    const style = document.createElement('link');\n    style.rel = 'stylesheet';\n    style.type = 'text/css';\n    style.href = `${this.options.path}/styles/${this.options.theme}.css`;\n    document.head.appendChild(style);\n  }\n\n}\n","import { InjectionToken } from '@angular/core';\nimport { HighlightOptions } from './highlight.model';\n\nexport const OPTIONS = new InjectionToken<HighlightOptions>('OPTIONS');\n"],"names":["HighlightModule","HighlightDirective","NgModule","HighlightService","ElementRef","Renderer2","Directive","__decorate","HostBinding","Input","from","filter","map","take","tap","Optional","Inject","Injectable","BehaviorSubject","InjectionToken"],"mappings":"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"}
