{"version":3,"file":"ngx-highlightjs.umd.min.js","sources":["~/ngx-highlightjs/src/highlight.module.ts","~/ngx-highlightjs/src/highlight.token.ts","~/ngx-highlightjs/src/highlight.service.ts","~/ngx-highlightjs/src/highlight.directive.ts"],"sourcesContent":["import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { HighlightDirective } from './highlight.directive';\nimport { HighlightService } from './highlight.service';\nimport { HighlightOptions } from './highlight.model';\nimport { OPTIONS } from './highlight.token';\n\nexport function HighlightFactory(options: HighlightOptions) {\n  return new HighlightService(options);\n}\n\n@NgModule({\n  declarations: [HighlightDirective],\n  exports: [HighlightDirective]\n})\nexport class HighlightModule {\n  static forRoot(options?: HighlightOptions): ModuleWithProviders {\n    return {\n      ngModule: HighlightModule,\n      providers: [\n        {provide: OPTIONS, useValue: options},\n        {\n          provide: HighlightService,\n          useFactory: HighlightFactory,\n          deps: [OPTIONS]\n        }\n      ]\n    };\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { HighlightOptions } from './highlight.model';\n\nexport const OPTIONS = new InjectionToken<HighlightOptions>('OPTIONS');\n","import { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { HighlightOptions } from './highlight.model';\nimport { OPTIONS } from './highlight.token';\n\ndeclare const hljs: any;\n\n@Injectable()\nexport class HighlightService {\n\n  options: HighlightOptions = {\n    theme: 'github',\n    path: 'assets/lib/hljs',\n    auto: true\n  };\n\n  /** hljs script on load event */\n  ready$ = new BehaviorSubject(false);\n\n  constructor(@Optional() @Inject(OPTIONS) options: HighlightOptions) {\n\n    this.options = {...this.options, ...options};\n\n    /** Load hljs script and style only once */\n    this.loadScript();\n    this.loadTheme();\n  }\n\n  loadScript() {\n    const script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.onload = () => {\n      this.ready$.next(true);\n    };\n    script.src = `${this.options.path}/highlight.pack.js`;\n    document.head.appendChild(script);\n  }\n\n  loadTheme() {\n    const style = document.createElement('link');\n    style.rel = 'stylesheet';\n    style.type = 'text/css';\n    style.href = `${this.options.path}/styles/${this.options.theme}.css`;\n    document.head.appendChild(style);\n  }\n\n}\n","import { Directive, ElementRef, Renderer2, OnDestroy, Input, OnInit, HostBinding } from '@angular/core';\nimport { HighlightService } from './highlight.service';\nimport { from } from 'rxjs/observable/from';\nimport { map, take, filter, tap } from 'rxjs/operators';\n\n/** Highlight.js library */\ndeclare const hljs: any;\n\n/** There are 2 ways to set the code\n *  1 - using the [code] input (default) <code highlight [code]=\"yourCode\"></code>\n *  2 - using element text content <code> {{yourCode}} </code>\n */\n\n@Directive({\n  selector: '[highlight]'\n})\nexport class HighlightDirective implements OnInit, OnDestroy {\n\n  /** Element ref */\n  el: HTMLElement;\n\n  /** Highlight code from text content on changes */\n  domObs: MutationObserver;\n\n  /** Code text */\n  code: string;\n\n  /** Highlight, can be use to select highlight mode */\n  @Input() highlight: string;\n\n  /** Highlight code directly */\n  @Input('code')\n  set setCode(code: string) {\n    this.code = code;\n    this.hl.ready$.pipe(\n      filter(ready => ready),\n      take(1),\n      tap(() => this.highlightElement(this.el, code))\n    ).subscribe();\n  }\n\n  @HostBinding('class.hljs') hljsClass = true;\n\n  constructor(el: ElementRef, private renderer: Renderer2, private hl: HighlightService) {\n    this.el = el.nativeElement;\n  }\n\n  ngOnInit() {\n\n    /** If code is undefined, highlight using element text content */\n    if (!this.code && this.hl.options.auto) {\n\n      this.hl.ready$.pipe(\n        filter(ready => ready),\n        take(1),\n        tap(() => {\n          this.highlightTextContent();\n\n          /** Highlight when text content changes */\n          this.domObs = new MutationObserver(() => this.highlightTextContent());\n          this.domObs.observe(this.el, { childList: true, subtree: true });\n        })\n      ).subscribe();\n    }\n  }\n\n  /** Highlight using element text content */\n  highlightTextContent() {\n    if (!this.highlight) {\n      /** <code highlight [textContent]=\"code\"></code> */\n      if (this.el.tagName.toLowerCase() === 'code') {\n        this.highlightElement(this.el, this.el.innerText.trim());\n      } else {\n        console.warn(`[HighlightDirective]: Use 'highlight' on <code> elements only`);\n      }\n    } else if (this.highlight === 'all') {\n      /** <div highlight=\"all\">\n       *    <pre><code [textContent]=\"code\"></code></pre>\n       *    <pre><code [textContent]=\"code\"></code></pre>\n       *  </div>\n       */\n      this.highlightChildren(this.el, 'pre code');\n    } else {\n      /** <div highlight=\"section code\">\n       *    <section><code [textContent]=\"code\"></code></section>\n       *    <section><code [textContent]=\"code\"></code></section>\n       *  </div>\n       */\n      this.highlightChildren(this.el, this.highlight);\n    }\n  }\n\n  /** Highlight single element */\n  highlightElement(el: HTMLElement, code: string) {\n\n    const highlightedCode = hljs.highlightAuto(code).value;\n\n    if (highlightedCode !== el.innerHTML) {\n      this.renderer.setProperty(el, 'innerHTML', highlightedCode);\n    }\n  }\n\n  /** Highlight children */\n  highlightChildren(el: HTMLElement, selector: string) {\n\n    const codeElements = el.querySelectorAll(selector);\n\n    /** highlight all children with the same selector */\n    from(codeElements).pipe(\n      filter((code: HTMLElement) => code.childNodes.length === 1 && code.childNodes[0].nodeName === '#text'),\n      map((codeElement: HTMLElement) => this.highlightElement(codeElement, codeElement.innerText.trim())),\n      take(1)\n    ).subscribe();\n  }\n\n  ngOnDestroy() {\n    /** Disconnect MutationObserver */\n    if (!this.code && this.hl.options.auto) {\n      this.domObs.disconnect();\n    }\n  }\n}\n"],"names":["HighlightFactory","options","HighlightService","OPTIONS","InjectionToken","exports","ɵc","this","theme","path","auto","ready$","BehaviorSubject","Object","assign","loadScript","loadTheme","prototype","_this","script","document","createElement","async","type","onload","next","src","head","appendChild","style","rel","href","__decorate","Injectable","__param","Optional","Inject","ɵb","HighlightDirective","el","renderer","hl","hljsClass","nativeElement","defineProperty","set","code","pipe","filter","ready","take","tap","highlightElement","subscribe","ngOnInit","highlightTextContent","domObs","MutationObserver","observe","childList","subtree","highlight","highlightChildren","tagName","toLowerCase","innerText","trim","console","warn","highlightedCode","hljs","highlightAuto","value","innerHTML","setProperty","selector","codeElements","querySelectorAll","from","childNodes","length","nodeName","map","codeElement","ngOnDestroy","disconnect","Input","HostBinding","Directive","__metadata","ElementRef","Renderer2","HighlightModule","HighlightModule_1","forRoot","ngModule","providers","provide","useValue","useFactory","deps","NgModule","declarations"],"mappings":"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"}
